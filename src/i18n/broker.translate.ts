const inbondUSA = 'Inbond USA';
export const brokerEn = {
  cancel: 'Cancel',
  entryTypeMin: 'must be at least 7 alphanumeric characters',
  containerSizeSchema: 'container size is required',
  referencesSchema: 'References is required',
  notesSchema: 'Notes must be at least 3 characters',
  invoiceDateSchema: 'Invoice date is required',
  chargesSchema: 'Extra charges is required',
  clientSchema: 'Client is required',
  releaseDateSchema: 'Release date is required',
  entryTypeSchema: 'Entry type is required',
  airportSchema: 'Airport is required',
  guideNumberSchema: '# Guide is required',
  dateEstimatedSchema: 'Estimated date is required',
  quantityOperationSchema: 'Amount collected is required',
  trafficNumberSchema: 'transit number is required',
  warehouseSchema: 'Warehouse is required',
  importTypeSchema: 'Import type is required',
  containerSchema: 'Container is required',
  expectedArrivalDateSchema: 'Expected arrival date is required',
  packingListFilesSchema: 'Packing list is required',
  requirementFilesSchema: 'pedimento file is required',
  invoiceFilesSchema: 'Invoice file is required',
  arrivalPlaceSchema: 'The place of arrival is required',
  pickupAppointmentSchema: 'Collection appointment is required',
  receiptNumberSchema: 'The receipt number is required',
  movementSchema: 'The maneuver is required',
  packageTypeSchema: 'The type of package is required',
  quantitySchema: 'quantity is required',
  typeErrorNumber: 'You must specify a number',
  trafficNumberLabel: '# transit',
  warehouseLabel: 'Warehouse',
  notesLabel: 'Notes',
  economicNumber: 'Economic number',
  economicNumberSchema: 'Economic number is required',
  vehicleType: 'Vehicle type',
  vehicleTypeSchema: 'Vehicle type is required',
  driver: 'Driver',
  driverSchema: 'Driver is required',
  additionalFiles: 'Additional documents',
  requirementsFiles: 'Attach Pedimento',
  invoiceFiles: 'Attach invoice',
  packingListFiles: 'Attach Packing List',
  receiptLabel: '# receipt',
  importTypeLabel: 'Import type',
  invoiceNumberLabel: '# invoice',
  containerLabel: 'Container',
  releaseDateLabel: 'release date',
  referencesLabel: 'References',
  selectImportType: 'Select an import type',
  arrivalPlaceLabel: 'place of arrival',
  pickupAppointmentLabel: 'pickup appointment',
  movementLabel: 'Maneuver',
  quantityLabel: 'quantity',
  containerSizeLabel: 'Container size',
  requirementLabel: 'Pedimento Number',
  packageTypeLabel: 'Type of package',
  clientLabel: 'client',
  airportLabel: 'airport',
  guideNumberLabel: '# Guide',
  dateEstimatedLabel: 'Estimated date of arriving',
  invoiceDateLabel: 'Invoice date',
  materialLabel: 'Material',
  chargesLabel: 'Additional charges',
  toReturn: 'to return',
  registrationDate: 'registration date',
  totalPieces: 'Total pieces',
  arrivalUsa: 'Arrival USA',
  usaImport: 'Entry USA',
  transportCollection: 'Transport collection',
  usaWarehouse: 'USA warehouse receipt',
  mxImport: 'Documents ready MX',
  borderCrossing: 'Crossing USA - MX',
  mxWarehouse: 'Arrival Warehouse MX',
  endUp: 'End up',
  timeTotal: 'Total time',
  byOperation: 'By operation',
  Consolidated: 'Consolidated',
  requestedOperations: 'Requested operations',
  inProcessOperations: 'Operations in process',
  finishedOperations: 'Finished operations',
  notifications: 'Notifications',
  usaArrivals: 'USA arrivals',
  importUsa: 'Inbond USA',
  pickUpTransport: 'Pick up (transport)',
  receiveUsaWarehouse: 'Receive USA warehouse',
  importMx: 'documents ready mx',
  borderCrossingUsaMx: 'Crossing USA - MX',
  warehouseArrivalMx: 'Warehouse arrival MX',
  finished: 'Finished',
  requestOperation: 'Request operation',
  summary: 'Summary',
  detail: 'Detail',
  allOperations: 'All operations',
  showFinished: 'Show finished',
  arrivalUsaError: 'error saving arrival',
  arrivalUsaSuccess: 'arrival saved successfully',
  importUsaError: 'error saving inbond USA',
  importUsaSuccess: 'Inbond USA saved successfully',
  transportCollectionError: 'error saving transport pickup',
  transportCollectionSuccess: 'transport pickup successfully saved',
  receiptUsaError: 'error saving USA receipt step',
  receiptUsaSuccess: 'USA receipt saved correctly',
  importMxError: 'error saving documents mx',
  importMxSuccess: 'documents mx saved successfully',
  trafficNumber404: 'transit number does not exist',
  operationStepError: 'Operation step does not match',
  borderCrossingError: 'error saving border crossing',
  borderCrossingSuccess: 'border crossing successfully saved',
  arrivalWarehouseMxError: 'error when saving arrival to MX store',
  arrivalWarehouseMxSuccess: 'arrival at MX warehouse saved successfully',
  skipStepUsaSuccess: 'step skipped successfully',
  skipStepUsaError: 'error skipping step',
  endOperationError: 'error at end of operation',
  endOperationSuccess: 'operation completed successfully',
  addExtraChargeError: 'error adding extra charge',
  addExtraChargeSuccess: 'extra charge added successfully',
  cleanStatusFilter: 'Clear status filter',
  operationCreated: 'Operation created successfully',
  userNotFound: 'user session expired',
  history: 'History',
  documents: 'Documents',
  references: 'References',
  abstract: 'Abstract',
  addExtraCharge: 'Add extra charge',
  messageAddExtraCharge: 'Minimum 1 additional charge required to add',
  messageShippingOrders: 'Minimum of 1 shipping order is required to register',
  messageAddReceived: 'A minimum of 1 receipt is required to register',
  RPLBET: 'Collection in Puerto Long Beach and delivery in Mexico',
  RAET: 'Pickup at Airport and delivery in Mexico',
  ACT: 'Pickup USA - delivery in Mexico',
  SDET: 'Receipt in San Diego and delivery in Mexico',
  selectOperation: 'Select the type of operation',
  stepOf: 'of',
  nextStep: 'Next step',
  skipStep: 'Skip step',
  omitReceipt: 'omit receipt',
  search: 'Search',
  receivedNotFound: 'receipt not found',
  duplicatedReceive: 'Cannot add the same receipt twice in this operation',
  skipTransport: 'transport is not operated by G-Global',
  table: {
    client: 'Client',
    number: 'Operation Number',
    completed: 'Completed',
    createBy: 'Created by',
    updateBy: 'Updated by',
    notificationDate: 'Date of notification',
    expectedArrivalDate: 'Estimated arrival date',
    releaseUsaDate: 'Release date USA',
    transportationDate: 'transportation date',
    receiptUsaDate: 'Date of receipt USA',
    importMxDate: 'Import date MX',
    borderCrossingDate: 'Border crossing date',
    warehouseMexDate: 'Date of arrival at the MX warehouse',
    completedDate: 'Finish date',
    timeElapsedTotal: 'Total time',
    packageName: 'Type of package',
    packageQuantity: 'Number of packages',
    quantityPackages: 'Amount of pieces',
    aggregator: 'Aggregator',
  },
  tableMonitor: {
    week: 'Week',
    gOps: '#G-Ops',
    warehouse: 'Warehouse',
    estimate: 'Estimate',
    court: 'Court',
    shippingOrder: 'Shipping order',
    type: 'Type',
    client: 'Client',
    transit: '#Transit',
    driveType: 'Drive type',
    economic: '#Economic',
    unitArrival: 'Unit arrival',
    documentGeneration: 'Document generation',
    immex: 'FTC IMMEX Finiched',
    invoice: '#Invoice',
    sentDocuments: 'Sent Documents',
    documentsDelivered: 'Documents Delivered',
    unitDispatch: 'Unit Dispatch',
    moduleMX: 'Module MX',
    moduleUSA: 'Module USA',
    weighingMachine: 'Weighing Machine',
    arrivalAlmUsa: 'Arrival ALM USA',
    offloadAlmUsa: 'Offload ALM USA',
    delivered: 'Delivered',
    totalTime: 'Total Time',
  },
  cardsMonitor: {
    dailyEstimation: 'Daily estimation',
    assignedTransits: 'Assigned transits',
    documentation: 'Documentation',
    borderHeals: 'Border heals',
    sdWarehousr: 'Warehouse San Diego',
    finished: 'Finished',
  },
  steps: {
    step1: 'Notification',
    step2: 'Arrival USA',
    step3: inbondUSA,
    step4: 'Pick up (transport)',
    step5: 'Receive USA warehouse',
    step6: 'Documents ready MX',
    step7: 'border crossing USA - MX',
    step8: 'Warehouse arrival MX',
    step9: 'Finished',
  },
  updateStepSuccess: 'Step updated successfully',
  opsInvoicedMessage: 'The GOP was invoiced.',
  withoutLogs: 'No logs found',
  viewLogs: 'View logs',
  shipperMessage: 'Total value is greater than 2500, shipper became mandatory',
  gopFinished: 'The GOP has been finalized',
};

export const brokerEs = {
  cancel: 'Cancelar',
  entryTypeMin: 'deben de ser minimo 7 caracteres alfanumérico',
  containerSizeSchema: 'el tamaño del contenedor es requerido',
  referencesSchema: 'Se requieren referencias',
  notesSchema: 'Las notas deben tener al menos 3 caracteres',
  invoiceDateSchema: 'La fecha de la factura es obligatoria',
  chargesSchema: 'Se requieren cargos adicionales',
  clientSchema: 'Cliente es requerido',
  airportSchema: 'Aeropuerto es requerido',
  guideNumberSchema: '# Guía es requerido',
  dateEstimatedSchema: 'Fecha estimada es requerido',
  quantityOperationSchema: 'Cantidad recolectada es requerido',
  trafficNumberSchema: 'El numero de tránsito es requerido',
  warehouseSchema: 'El almacen es requerido',
  entryTypeSchema: 'El tipo de entrada es requerida',
  releaseDateSchema: 'La fecha de liberación es requerida',
  importTypeSchema: 'El tipo de importación es requerido',
  containerSchema: 'Se requiere contenedor',
  expectedArrivalDateSchema: 'Se requiere la fecha prevista de llegada',
  packingListFilesSchema: 'Packing list es requerido',
  requirementFilesSchema: 'El archivo de pedimento es requerido',
  invoiceFilesSchema: 'El archivo de factura es requerido',
  arrivalPlaceSchema: 'El lugar de llegada es requerido',
  pickupAppointmentSchema: 'La cita de recolección es requerida',
  receiptNumberSchema: 'El número de recibo es requerido',
  movementSchema: 'La maniobra es requerida',
  packageTypeSchema: 'El tipo de paquete es requerido',
  quantitySchema: 'La cantidad es requerida',
  typeErrorNumber: 'Debe ingresar un numero',
  trafficNumberLabel: '# tránsito',
  warehouseLabel: 'Almacen',
  economicNumber: 'Número económico',
  economicNumberSchema: 'El número económico',
  vehicleType: 'Tipo de vehiculo',
  vehicleTypeSchema: 'El tipo de vehiculo es requerido',
  driver: 'Conductor',
  driverSchema: 'El conductor es requerido',
  notesLabel: 'Notas',
  additionalFiles: 'Documentos adicionales',
  requirementsFiles: 'Adjuntar Pedimento',
  invoiceFiles: 'Adjuntar Factura',
  packingListFiles: 'Adjuntar Packing List',
  receiptLabel: '# recibo',
  importTypeLabel: 'Tipo de importación',
  invoiceNumberLabel: '# factura',
  containerLabel: 'Contenedor',
  releaseDateLabel: 'Fecha de liberación',
  referencesLabel: 'Referencias',
  selectImportType: 'Seleccione un tipo de importación',
  arrivalPlaceLabel: 'Lugar de llegada',
  pickupAppointmentLabel: 'Cita de recolección',
  movementLabel: 'Maniobra',
  quantityLabel: 'Cantidad',
  containerSizeLabel: 'Tamaño del contenedor',
  requirementLabel: 'Numero de pedimento',
  packageTypeLabel: 'Tipo de bulto',
  clientLabel: 'Cliente',
  airportLabel: 'Aeropuerto',
  guideNumberLabel: '# Guía',
  dateEstimatedLabel: 'Fecha estimada de llegada',
  invoiceDateLabel: 'fecha de la factura',
  materialLabel: 'Material',
  chargesLabel: 'Cargos adicionales',
  toReturn: 'Regresar',
  registrationDate: 'Fecha de Registro',
  totalPieces: 'Piezas en total',
  arrivalUsa: 'Llegada EE.UU.',
  usaImport: 'Ingreso EE.UU.',
  transportCollection: 'Recoleccion de transporte',
  usaWarehouse: 'Recibo de almacén de EE. UU.',
  mxImport: 'Documentos listo MX',
  borderCrossing: 'Cruce USA - MX',
  mxWarehouse: 'Llegada Almacén MX',
  endUp: 'terminar',
  timeTotal: 'Tiempo Total',
  byOperation: 'Por operación',
  Consolidated: 'Consolidado',
  requestedOperations: 'Operaciones solicitadas',
  inProcessOperations: 'Operaciones en proceso',
  finishedOperations: 'Operaciones finalizadas',
  notifications: 'Notificaciones',
  usaArrivals: 'Llegadas USA',
  importUsa: inbondUSA,
  pickUpTransport: 'Recolección (transporte)',
  receiveUsaWarehouse: 'Recibo en almacen USA',
  importMx: 'Documentos listos MX',
  borderCrossingUsaMx: 'Cruce USA - MX',
  warehouseArrivalMx: 'Llegada al almacen MX',
  finished: 'Finalizada',
  requestOperation: 'Solicitar operación',
  summary: 'Resumen',
  detail: 'Detalle',
  allOperations: 'Todas las operaciones',
  showFinished: 'Mostrar finalizadas',
  arrivalUsaError: 'error al guardar llegada',
  arrivalUsaSuccess: 'llegada guardada correctamente',
  importUsaError: 'error al guardar importación USA',
  importUsaSuccess: 'importación USA guardada correctamente',
  transportCollectionError: 'error al guardar recolección de transporte',
  transportCollectionSuccess: 'recolección de transporte guardada correctamente',
  receiptUsaError: 'error al guardar recibo USA',
  receiptUsaSuccess: 'recibo de USA guardado correctamente',
  importMxError: 'error al guardar documentos MX',
  importMxSuccess: 'Documentos MX guardada correctamente',
  trafficNumber404: 'El numero de tránsito no existe',
  operationStepError: 'El paso de la operación no coincide',
  borderCrossingError: 'error al guardar cruce fronterizo',
  borderCrossingSuccess: 'cruce fronterizo guardado correctamente',
  arrivalWarehouseMxError: 'error al guardar llegada al almacen MX',
  arrivalWarehouseMxSuccess: 'llegada al almacen MX guardada correctamente',
  skipStepUsaSuccess: 'paso omitido con éxito',
  skipStepUsaError: 'error omitiendo paso',
  endOperationError: 'error al finalizar operación',
  endOperationSuccess: 'operación finalizada correctamente',
  addExtraChargeError: 'error al agregar cargo adicional',
  addExtraChargeSuccess: 'cargo adicional añadido con éxito',
  cleanStatusFilter: 'Limpiar filtro de estatus',
  operationCreated: 'Operación creada con éxito',
  userNotFound: 'La sesión del usuario expiró',
  history: 'Historial',
  documents: 'Documentos',
  references: 'Referencias',
  abstract: 'Resumen',
  addExtraCharge: 'Agregar cargo adicional',
  messageAddExtraCharge: 'Se requiere un mínimo de 1 cargo adicional para agregar',
  messageShippingOrders: 'Se requiere un mínimo de 1 orden de envío para registrar',
  messageAddReceived: 'Se requiere un mínimo de 1 recibo para Registrar',
  RPLBET: 'Recoleccion en Puerto Long Beach y entrega en Mexico',
  RAET: 'Recoleccion en Aeropuerto y entrega en Mexico',
  ACT: 'Recolección USA - entrega en Mexico',
  SDET: 'Recibo en san Diego y entrega en Mexico',
  selectOperation: 'Selecciona el tipo de operacion',
  stepOf: 'de',
  nextStep: 'Siguiente paso',
  skipStep: 'Omitir este paso',
  omitReceipt: 'Omitir recibo',
  search: 'Buscar',
  receivedNotFound: 'No se encontro el recibo',
  duplicatedReceive: 'No se puede agregar el mismo recibo dos veces en esta operación',
  skipTransport: 'transporte no operado por G-Global',
  table: {
    client: 'Cliente',
    number: 'Número de operación',
    completed: 'Estatus',
    createBy: 'Creado por',
    updateBy: 'Actualizado por',
    notificationDate: 'Fecha de notificacion',
    expectedArrivalDate: 'Fecha de llegada estimada',
    releaseUsaDate: 'Fecha de liberación USA',
    transportationDate: 'Fecha de transporte',
    receiptUsaDate: 'Fecha de recibo USA',
    importMxDate: 'Fecha de importación MX',
    borderCrossingDate: 'Fecha de cruce fronterizo',
    warehouseMexDate: 'Fecha de llegada al almacen MX',
    completedDate: 'Fecha de finalización',
    timeElapsedTotal: 'Tiempor total',
    packageName: 'Tipo de bulto',
    packageQuantity: 'Cantidad de bultos',
    quantityPackages: 'Cantidad de piezas',
    aggregator: 'Agrupador',
  },
  tableMonitor: {
    week: 'Semana',
    gOps: '#G-Ops',
    warehouse: 'Almacen',
    estimate: 'Estimacion',
    court: 'Corte',
    shippingOrder: 'Orden de envio',
    type: 'Tipo',
    client: 'Cliente',
    transit: '#Transito',
    driveType: 'Tipo de Unidad',
    economic: '#Economico',
    unitArrival: 'Arribo de unidad',
    documentGeneration: 'Generacion de documentos',
    immex: 'FTC IMMEX Terminada',
    invoice: '#Factura',
    sentDocuments: 'Documentos Enviados',
    documentsDelivered: 'Documentos Entregados',
    unitDispatch: 'Despacho de unidad',
    moduleMX: 'Modulo MX',
    moduleUSA: 'Modulo USA',
    weighingMachine: 'Bascula',
    arrivalAlmUsa: 'Arribo ALM USA',
    offloadAlmUsa: 'Descarga ALM USA',
    delivered: 'Entregado',
    totalTime: 'Tiempo total',
  },
  cardsMonitor: {
    dailyEstimation: 'Estimacion diaria',
    assignedTransits: 'Transito asignados',
    documentation: 'Documentacion',
    borderHeals: 'Cruce Fronterizo',
    sdWarehousr: 'Almacen San Diego',
    finished: 'Finalizado',
  },

  steps: {
    step1: 'Notificación',
    step2: 'Llegada EE.UU.',
    step3: 'Inbond EE.UU.',
    step4: 'Recolección (transporte)',
    step5: 'Recibido almacén de EE. UU.',
    step6: 'Documentos listos MX',
    step7: 'Cruce USA-MX',
    step8: 'Llegada al almacén MX',
    step9: 'Terminado',
  },
  updateStepSuccess: 'Paso actualizado con correctamente',
  opsInvoicedMessage: 'El GOP fué facturado',
  withoutLogs: 'Sin bitácora',
  viewLogs: 'Ver bitácora',
  shipperMessage: 'El valor total es superior a 2500, el shipper se convirtió en obligatorio',
  gopFinished: 'El GOP ya fue finalizado',
};
